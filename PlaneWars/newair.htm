<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>AIR</title>
    <link href="res/air.css" rel="stylesheet" type="text/css" />
</head>
<body style="background-color: #EEEEEE; padding: 0 0 0 0; overflow: hidden;">
    <form id="form1" runat="server">
    <table id="table_panel" width="100%">
        <tr>
            <td width="33%">
            </td>
            <td>
                <div id="div_frame" style="width: 600px; border: 1px solid #cdcdcd; background: #FFFFFF;
                    overflow: hidden">
                </div>
            </td>
            <td width="33%" valign="top">
                <input id="start" type="button" value="开始" />
                <select id="ddl_zd">
                    <option>单机枪</option>
                    <option>双机枪</option>
                </select><br />
                <select id="ddl_dd">
                    <option>2导弹</option>
                    <option selected="selected">4导弹</option>
                    <option>6导弹</option>
                    <option>8导弹</option>
                </select><br />
                <select id="ddl_dd_type">
                    <option>炸弹</option>
                    <option>穿甲弹</option>
                </select><br />
                <select id="nd">
                    <option value="1">难度一</option>
                    <option value="1.5">难度二</option>
                    <option value="2">难度三</option>
                    <option value="3">难度四</option>
                    <option value="5">难度五</option>
                </select>
            </td>
        </tr>
    </table>
    </form>
</body>
</html>
<script type="text/javascript" src="res/jquery-1.7.2.min.js"></script>
<script type="text/javascript" src="res/jquery.ui.core.js"></script>
<script type="text/javascript" src="res/jquery.ui.widget.js"></script>
<script type="text/javascript" src="res/jquery.ui.mouse.js"></script>
<script type="text/javascript" src="res/jquery.ui.draggable.js"></script>
<script type="text/javascript">
    //color:#FFD374;
    var $df = $("#div_frame");
    var df_high;
    var df_width;
    var df_pos;
    var $air;
    var air_width, air_high;
    var $score;
    var move_event_left = 0, move_event_right = 0, move_event_top = 0, move_event_down = 0;

    var zd_i = 0, dd_i = 0, dr_i = -1;
    var init = function () {
        clearInterval(time1);
        move_event_left = 0, move_event_right = 0, move_event_top = 0, move_event_down = 0;
        zd_i = 0, dd_i = 0, dr_i = -1;
        $("#div_frame").html("<div id=\"div_score\">0</div><div id=\"div_air\" class=\"air\"></div>");
        $air = $("#div_air"); $score = $("#div_score").html(0);
        $score.animate({ opacity: .4 });
        $df.height(getPageHeight() - 30);
        df_high = $df.height();
        df_width = $df.width();
        air_width = $air.width();
        air_high = $air.height();
        df_pos = $df.position();
        $air.draggable({ containment: "parent" }).css("top", $df.height() - 200).css("left", $df.width() / 2 - 50);
        Event();
        $(document).keydown(function (event) {
            var kc = event.keyCode;
            air_move(kc, 1);
        }).keyup(function (event) {
            var kc = event.keyCode;
            air_move(kc, 0)
        })
    };

    $(init);
    $("#start").click(function () { clearInterval(time1); init(); });

    function air_move(kc, val) {
        if (kc == 37) {
            //$air.animate({ left: "-=1px" }, 0);
            move_event_left = val;
        }
        else if (kc == 39) {
            //$air.animate({ left: "+=1px" }, 0);
            move_event_right = val;
        }
        else if (kc == 38) {
            //$air.animate({ top: "-=1px" }, 0);
            move_event_top = val;
        }
        else if (kc == 40) {
            //$air.animate({ top: "+=1px" }, 0);
            move_event_down = val;
        }
    }

    var time1;
    function Event() {
        time1 = setInterval("Begin()", 30);

        var $begin = $("<span class='start'>5</span>");
        $df.append($begin);
        $begin.css("position", "absolute").css("top", 150).css("left", $df.position().left).width(df_width);
        djs($begin,3);
    }

    function djs($begin, i) {
        if (i <= 0) {
            $begin.show().html("GO!").fadeOut(1000, function () { dr_i = 0; $begin.remove(); });
        return; }
        $begin.show().html(i).fadeOut(1000, function () { djs($begin, --i); });
    }

    function Begin() {
        var air_pos = $air.position();

        $(".zd,.dd").each(function (i) {
            var $zd = $(this);
            var zd = $(this).position();
            if (zd.top < 30) { $zd.remove(); }
            var vc = 50;
            var type = $zd.attr("class");
            if (type == "dd") {
                if ($zd.attr("pt") == "") {
                    vc = parseInt($zd.attr("vc")) + 1;
                    $zd.attr("vc", vc);
                } else { vc = 2; }

                var val = 0;
                var py = parseFloat($zd.attr("py")); if (py > 10) { $zd.attr("pt", ""); }
                if ($zd.attr("pt") == "l2") { val = 8; } else if ($zd.attr("pt") == "l1") { val = 4; }
                else if ($zd.attr("pt") == "r1") { val = -4; } else if ($zd.attr("pt") == "r2") { val = -8; }
                $zd.css("left", zd.left + val).attr("py", py + 1);
            }
            $zd.css("top", zd.top - vc);
            $(".dr,.dr2,.dr3").each(function (i) {
                var $dr = $(this);
                var dr_pos = $(this).position();
                var dr_height = $(this).height();
                var zd_left = zd.left + $zd.width() / 2;
                if (zd.top > dr_pos.top && zd.top < dr_pos.top + dr_height &&
                    zd_left > dr_pos.left && zd_left < dr_pos.left + $(this).width() ){
                    var at = 1;
                    if (type == "zd") {
                        at = 2;
                    } else if (type == "dd") { at = 9; }
                    var life = parseInt($(this).attr("life")) - at;
                    if (life <= 0) {
                        $score.html(parseInt($score.html()) + parseInt($(this).attr("score")));
                        $(this).attr("class", "bz").fadeOut("slow", function () { $(this).remove(); });
                        $zd.remove();
                    } else {
                        $(this).attr("life", life);
                        if (type == "dd") {$zd.css("top", zd.top - 30).attr("class", "bz").fadeOut("slow", function () { $(this).remove(); }); }
                        else if (type == "zd") { $zd.css("top", dr_pos.top + dr_height).html('…<BR/>…').attr("class", "mz").fadeOut("normal", function () { $(this).remove(); }); }
                    }
                }
            })
        })

        $(".dr,.dr2,.dr3,.dr_zd").each(function (i) {
            var $dr = $(this);
            var dr_pos = $dr.position();
            var dr_high = $dr.height();
            var dr_width = $dr.width();
            var vc = parseFloat($(this).attr("vc"));
            if (dr_pos.top > df_high - 30) { $(this).remove(); return; }
            else if (dr_pos.top > df_high / 2) {
                $(this).attr("vc", vc + 0.5);
            }

            $(this).css("top", dr_pos.top + vc);

            var de = $dr.attr("de");
            var py = parseInt($dr.attr("py"));
            if (de == "r") { $(this).css("left", dr_pos.left + py); } else if (de == "l") { $(this).css("left", dr_pos.left - py); }

            if (Pz($air, dr_pos.top + dr_high * 0.75, dr_pos.left + dr_width * 0.25) || Pz($air, dr_pos.top + dr_high * 0.75, dr_pos.left + dr_width * 0.75)) {
                clearInterval(time1);
                if (confirm("您得分：" + $score.html() + "！重新开始吗？")) {
                    init();
                }
                return;
            }
        })

        $(".bz").each(function (i) {
            var bz = $(this).position();
            $(this).css("top", bz.top + 5);
        })
        $(".mz").each(function (i) {
            var bz = $(this).position();
            $(this).css("top", bz.top - 5);
        })

        if (++zd_i == 4) {
            zd_i = 0;
            Zd();
        }

        if (++dd_i == 40) {
            dd_i = 0;
            Dd();
        }

        if (dr_i >= 0 && ++dr_i == 16) {
            dr_i = 0;
            Dr();
        }

        Move_Air(air_pos);
    }

    function Move_Air(air_pos) {
        var left = air_pos.left;
        var top = air_pos.top;
        if (move_event_left == 1) {
            if (left < df_pos.left + 10) { return; }
            $air.animate({ left: "-=10px" }, 0);
        }
        if (move_event_right == 1) {
            if (left > df_pos.left + df_width - air_width) { return; }
            $air.animate({ left: "+=10px" }, 0);
        }
        if (move_event_top == 1) {
            if (top < df_pos.top + 50) { return; }
            $air.animate({ top: "-=10px" }, 0);
        }
        if (move_event_down == 1) {
            if (top > df_pos.top + df_high - air_high - 30) { return; }
            $air.animate({ top: "+=10px" }, 0);
        }
    }

    function Pz($air, x, y) {
        var air_pos = $air.position();
        return x > air_pos.top + 10 && x < air_pos.top - 10 + $air.height() && y > air_pos.left + 15 && y < air_pos.left + $air.width() - 15;
    }

    function Dd() {
        var type = $("#ddl_dd").val();

        DdAdd(50, 0 + air_width / 2, "l1");
        DdAdd(50, air_width - air_width / 2 - 20, "r1");
        
        if (type == "2导弹") {
            return;
        }

        DdAdd(80, 0 + air_width / 2, "l2");
        DdAdd(80, air_width - air_width / 2 - 20, "r2");

        if (type == "4导弹") {
            return;
        }

        DdAdd(150, 0 + air_width / 5, "l1");
        DdAdd(150, air_width - air_width / 5 - 20, "r1");

        if (type == "6导弹") {
            return;
        }

        DdAdd(110, 0 + air_width / 3, "l2");
        DdAdd(110, air_width - air_width / 3 - 20, "r2");
    }

    function DdAdd(x, y, p) {
        var vc = 5;
        if (p == "l1" || p == "r1") {
            vc = 10;
        }
        var type = "dd";
        //if ($("#ddl_dd_type").val() == "穿甲弹") {type = "dd2";}
        var $zd = $("<div class='dd' type='" + type + "' vc='" + vc + "' pt='" + p + "' py='0'></div>");
        $df.append($zd);
        var air_os = $air.position();
        $zd.css("position", "absolute").css("top", air_os.top + x).css("left", air_os.left + y);
    }

    function Zd() {
        var type = $("#ddl_zd").val();

        if (type == "单机枪") {
            var $zd = $("<span class='zd'>║<br/>║</span>"); //║┃
            $df.append($zd);
            var air_os = $air.position();
            $zd.css("position", "absolute").css("top", air_os.top - 10).css("left", air_os.left + air_width / 2 - 7);
        } else {
            var $zd1 = $("<span class='zd'>║<br/>║</span>"); //║┃
            $df.append($zd1);
            var air_os = $air.position();
            $zd1.css("position", "absolute").css("top", air_os.top - 10).css("left", air_os.left + air_width *0.25 -7);

            var $zd2 = $("<span class='zd'>║<br/>║</span>"); //║┃
            $df.append($zd2);
            var air_os = $air.position();
            $zd2.css("position", "absolute").css("top", air_os.top - 10).css("left", air_os.left + air_width * 0.75-14);
        }
    }

    function Dr() {
        var count = $(".dr,.dr2,.dr3").length;
        if (count < 6) {
            var left = Math.floor(Math.random() * ($df.width() - 130) / 2 + (df_pos.left + 40));
            DrAdd(left, "r");
            DrAdd(left + 80 + parseInt(($df.width() - 200) / 2 * Math.random()), "l");
        } else if (count < 9) {
            DrAdd(Math.floor(Math.random() * ($df.width() - 130) + (df_pos.left + 40)), "");
        } else { }
    }

    function DrAdd(left, de) {
        var py = 1;
        if (de != "") {
            var drCount = parseInt(3 * Math.random());
            if (drCount == 1) {
                dr_zd_add(de, left);
                de = "";
            } else if (drCount == 2) { py = 2; }
        } else {
            var drCount = parseInt(4 * Math.random());
            left = $air.position().left + $air.width() / 2;
            if (drCount == 1) {
                dr_zd_add(de, left);
            } else if (drCount == 2) {
                if ($air.position().left < df_pos.left + df_width / 2) {
                    dr_zd_add("r", left);
                } else {
                    dr_zd_add("l", left);
                }
            }
        }
        var vc;
        var size = parseInt(30 * Math.random());
        var score = 20;
        var life = 2;
        var nd = parseInt($("#nd").val());
        if (size < 20) {
            vc = Math.floor(Math.random() * 7 + 4);
            life = (8 - vc) * nd;
            size = "dr3";
        } else if (size < 26) { size = "dr2"; vc = Math.floor(Math.random() * 6 + 3); life = (23 - vc * 2) * nd; score = 30; }
        else if (size < 29) { size = "dr"; vc = Math.floor(Math.random() * 5 + 3); life = (35 - vc * 3) * nd; score = 50; }
        else { size = "dr"; vc = 2; life = 50 * nd; score = 100; de = ""; }

        var $dr = $("<div class='" + size + "' vc='" + vc + "' life='" + life + "' score='" + score + "' de='" + de + "' py='" + py + "'></div>");
        $df.append($dr);
        $dr.css("position", "absolute").css("top", 0).css("left", left);
    }

    function dr_zd_add(de, left) {
        var py = parseInt(3 * Math.random());
        var $dr_zd = $("<span class='dr_zd' vc='13' de='" + de + "' py='"+py+"'>●</span>");
        $df.append($dr_zd);
        $dr_zd.css("position", "absolute").css("top", 0).css("left", left);
    }

    function ScoreAdd() {
        $score.html(parseInt($score.html()) + 1);
    }

    function getPageHeight() {
        var g = document, a = g.body, f = g.documentElement, d = g.compatMode == "BackCompat" ? a : g.documentElement;
        return Math.max(f.scrollHeight, a.scrollHeight, d.clientHeight);
    }
</script>
